name: Native image release pipeline

on:
  push:
    tags:
      - 'v*'
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

#  perform-release-linux:
#    needs: create-release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build native image with Gradle
#        run: ./gradlew zipExecutable
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.create-release.outputs.upload_url }}
#          asset_path: ./build/dist/monstermash.zip
#          asset_name: monstermash_linux_amd64.zip
#          asset_content_type: application/zip

#  perform-release-macos:
#    runs-on: macos-latest
#    needs: create-release
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build native image with Gradle
#        run: ./gradlew zipExecutable
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.create-release.outputs.upload_url }}
#          asset_path: ./build/dist/monstermash.zip
#          asset_name: monstermash_darwin_amd64.zip
#          asset_content_type: application/zip

  perform-release-windows:
    runs-on: ${{ matrix.os }}
#    runs-on: windows-latest
    needs: create-release
    strategy:
      matrix:
        os: [windows-latest]
#        os: [ubuntu-latest, macos-latest, windows-latest]
        gu-binary: [gu.cmd]
#        gu-binary: [gu, gu.cmd]
#        exclude:
#          - os: ubuntu-latest
#            gu-binary: gu.cmd
#          - os: macos-latest
#            gu-binary: gu.cmd
#          - os: windows-latest
#            gu-binary: gu
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: '21.0.0.java11'
      - name: Print JAVA_HOME
        id: java-home
        run: echo "::set-output name=path::$JAVA_HOME"
#      - name: Install native-image component
#        run: |
#          ${{ matrix.gu-binary }} install native-image
#      - name: Add msbuild to PATH
#        uses: microsoft/setup-msbuild@v1.0.2
      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build native image with Gradle
        run: ./gradlew zipExecutable
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/dist/monstermash.zip
          asset_name: monstermash_windows_amd64.zip
          asset_content_type: application/zip
